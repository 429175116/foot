<style lang="less">
  page{
    background-color: #e9e9e9;
  }
  scroll-view{
    height: auto;
  }
  #getUserInfo {
    position:fixed;
    top:0;
    width:750rpx !important;
    height:100% !important;
    padding:0rpx !important;
    z-index:999;
    background-color:rgba(255, 255, 255, 0);
    color:#fff;
  }
  .orderDetailData{
    margin-bottom: 120rpx;
    margin-left: -25rpx;
  }
  .operat{
    background-color: #fff;
    width: 750rpx;
    height: 100rpx;
    position: fixed;
    bottom: 0rpx;
    box-shadow: 0px 0px 5px #ccc;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10;
  }
  .operat-true view{
    width: 250rpx;
    height: 100rpx;
    text-align: center;
    line-height: 100rpx;
  }
  .operat-false view{
    width: 750rpx;
    height: 100rpx;
    text-align: center;
    line-height: 100rpx;
  }
  button[type=primary] {
    width: 120rpx !important;
    height: 120rpx !important;
    border-radius: 60rpx  !important;
    background-color:rgba(51,51,51,0.5) !important;
    padding: 0rpx !important;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  button[type=primary] image{
    width: 70rpx;
    height: 70rpx;
  }

  .foot{
    color: #ff5536;
    background-color: #fff;
    width: 400rpx !important;
  }
  .pay{
    color: #fff;
    background-color: #ff5536;
    width: 350rpx !important;
  }
  .list{
    background-color: #fff;
    width: 750rpx;
    height: auto;
    
  }
  .listCon{
    width: 750rpx;
    height: 187rpx;
    border-bottom: 1rpx solid #f0f0f0;
    display: flex;
    align-items: center;
    justify-content: center;
  } 
  .sample{
    width: 140rpx;
  }
  .sample image{
    width: 140rpx;
    height: 140rpx;
  }
  .info{
    width: 400rpx;
    padding: 27rpx;
    color: #999;
    font-size: 22rpx;
  }
  .info .title{
    color: #333;
    height: 30rpx;
    line-height: 30rpx;
  }
  .info .salesVolume{
    height: 55rpx;
    line-height: 55rpx;
  }
  .info .price{
    height: 60rpx;
    line-height: 75rpx;
  }
  .info p{
    color: #ff5536;
  }
  .listConOperat{
    width: 135rpx;
    height: 137rpx;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .listConOperat .del{
    position: absolute;
    right: 20rpx;
    top: 0rpx;
    width: 35rpx;
    height: 35rpx;
  }
  .listConOperat .del image{
    width: 35rpx;
    height: 35rpx;
  }
  .listConOperat .numControl{
    width: 40rpx;
    height: 40rpx;
    line-height: 40rpx;
    border: 1rpx solid #999;
    border-radius: 10rpx;
    text-align: center;
    color: #999;
  }
  .numContro2{
    width: 40rpx;
    height: 40rpx;
    line-height: 40rpx;
    border: 1rpx solid #E64340;
    background-color: #E64340;
    border-radius: 10rpx;
    text-align: center;
    color: #fff;
  }
  .listConOperat .num{
    width: auto;
    min-width: 55rpx;
    max-width: 100rpx;
    line-height: 40rpx;
    text-align: center;
  }
  .listConOperat .conOperat{
    width: 100%;
    position: absolute;
    height: 40rpx;
    bottom: 0rpx;
    text-align:right;
    padding-right:40rpx;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .orderInfo{
    background-color: #fff;
    margin-bottom: 10rpx;
    width: 750rpx;
    height: auto;
    padding: 0 25rpx;
  }
  .orderInfoCon{
    width: 700rpx;
    height: 85rpx;
    border-bottom: 1rpx solid #ddd;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 30rpx;
  }
  .orderInfo .orderInfoCon:last-child{
    border: 0;
  }
  .orderInfoCon .title{
    width: 200rpx;
    text-align: left;
    padding: 0 15rpx;
    color: #333;
  }
  .orderInfoCon .infoCon{
    padding-left: 30rpx;
    width: 425rpx;
    color: #999;
  }
  .orderInfoCon .con{
    width: 173rpx;
    text-align: right;
    color: #333;
  }
  .orderInfoCon .conColor{
    color: #ff5536 !important;
  }
  .orderInfoCon image{
    width: 40rpx;
    height: 40rpx;
  }
  .orderInfo input{
    width: 100%;
  }
  .confirmMenu{
    margin-top: 50rpx;
    width: 700rpx;
    height: auto;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .confirmMenu view{
    width: 600rpx;
    height: 90rpx;
    border-radius: 20rpx;
    font-size: 40rpx;
    color: #fff;
    background-color: #ff5536;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .originalPrice{
    text-decoration:line-through;
  }
  .passwordShow{
    display: flex;
    align-items: right;
    justify-content: right;
  }
  .passwordShow image{
    width: 50rpx;
    height: 50rpx;
    margin: auto;
    margin-right: 0;
  }
  .passwordShow span{
    margin: auto;
    margin-right: 0;
  }
  .orderDetailShowDown{
    transform-origin:center center; //旋转中心要是正中间 才行
    transform: rotate(0deg);
    transition: transform 0.2s; //过度时间 可调
  }
  .orderDetailShowUp{
    transform-origin:center center; //旋转中心要是正中间 才行
    transform: rotate(180deg);
    transition: transform 0.2s; //过度时间 可调
  }
  .cartDataRefresh{
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .cartDataRefresh image{
    width: 70rpx;
    height: 70rpx;
  }
  .numShow{
    width: 135rpx;
    text-align: right;
  }
  .refreshImage_1{
    transform-origin:center center; //旋转中心要是正中间 才行
    transform: rotate(0deg);
    transition: transform 1s; //过度时间 可调
  }
  .refreshImage_2{
    transform-origin:center center; //旋转中心要是正中间 才行
    transform: rotate(360deg);
    transition: transform 1s; //过度时间 可调
  }
  checkbox .wx-checkbox-input{
   border-radius: 50%;/* 圆角 */
   width: 40rpx; /* 背景的宽 */
   height: 40rpx; /* 背景的高 */
  }
  checkbox .wx-checkbox-input.wx-checkbox-input-checked{
    border: none;
    background: #fc6800;
  }
  checkbox .wx-checkbox-input.wx-checkbox-input-checked::before{
    border-radius: 50%;/* 圆角 */
    width: 40rpx;/* 选中后对勾大小，不要超过背景的尺寸 */
    height: 40rpx;/* 选中后对勾大小，不要超过背景的尺寸 */
    line-height: 40rpx;
    text-align: center;
    font-size:30rpx; /* 对勾大小 30rpx */
    color:#fff; /* 对勾颜色 白色 */
    background: transparent;
    transform:translate(-50%, -50%) scale(1);
    -webkit-transform:translate(-50%, -50%) scale(1);
  }
  // .listTitle{
  //   width: 750rpx;
  //   height: 80rpx;
  //   line-height: 80rpx;
  // }
  .newCook{
    color: #E64340 !important;
  }
  // movable-area{
  //   width: 100vh;
  //   height: 100vh;
  // }
  movable-view,movable-area {
    width: auto;
    height: auto;
  }
  movable-view{
    width: 120rpx;
    height: 120rpx;
    position: absolute;
    top: 80vh;
    left: 10rpx;
    // transform:translateX(100vh) translateY(0vh) translateZ(0px) scale(1);

  }
  .listorder{
    margin-bottom: 120rpx;
  }
</style>
<template>
<movable-area>
  <scroll-view scroll-y="hidden">
    <view class="orderInfo">
      <view class="orderInfoCon">
        <view class="title">当前桌号</view>
        <view class="infoCon">{{deskName}}</view>
        <view class="con">
            <image src="/img/delete.png" @tap="deleteRoom" class="deleteRoom"  wx:if="{{dinner}}" />
        </view>
      </view>
      <view class="orderInfoCon" wx:if="{{dinner}}">
        <view class="title">备注</view>
        <view class="infoCon">
          <input type="text" bindinput="getRemarks" placeholder="填写备注信息" />
        </view>
        <view class="con"></view>
      </view>
      <view class="orderInfoCon" wx:if="{{dinner}}">
        <view class="title">应付</view>
        <view class="infoCon"></view>
        <view class="con conColor">￥{{totalPrice}}</view>
      </view>
    </view>
    <view class="orderInfo listorder">
      <view class="orderInfoCon">
        <view class="title newCook">新点菜品</view>
        <view class="infoCon"></view>
        <view class="con conColor"></view>
      </view>
      <view class="list">
        <repeat for="{{ cartData }}" item="item">
          <view class="listCon" data-id="{{ item.product_id }}">
            <view class="sample">
              <image class="organic_rice_pic" src="{{ item.product_information.img }}" />
            </view>
            <view class="info">
              <view class="title">{{ item.product_information.name }}</view>
              <view class="salesVolume">已售{{ item.product_information.sale_count }}份</view>
              <view class="price">
                <span>
                  ￥<p>{{ item.product_information.discount }}</p>
                </span>
              </view>
            </view>
            <view class="listConOperat">
              <view class="del" data-id="{{ item.product_id }}" @tap="deleteShoppingCart"  wx:if="{{dinner}}">
                <image src="/img/delete.png" />
              </view>
              <view class="conOperat">
                <view class="numControl" data-index="{{index}}" data-num="{{item.num}}" @tap="quantityDown">-</view>
                <view class="num">{{ item.num }}</view>
                <view class="numContro2" data-index="{{index}}" data-num="{{item.num}}" @tap="quantityUp">+</view>
              </view>
            </view>
          </view>
        </repeat>
        <view class="dataNullShow" wx:if="{{ cartData.length == 0 }}">暂无已点菜品</view>
        <view class="cartDataRefresh">
          <image src="/img/refresh.png" class="{{refreshImage}}" @tap="cartDataRefresh" />
        </view>
      </view>

      <view class="confirmMenu">
        <view @tap="confirmOrderClick"  wx:if="{{dinner}}">确认菜单</view>
      </view>
      <view class="orderInfoCon" @tap="orderDetailDataShowClick"  wx:if="{{dinner}}">
        <view class="title newCook">已点菜品</view>
        <view class="infoCon"></view>
        <view class="con conColor">
          <image class="{{orderDetailTransform}}" src="{{orderDetailImg}}" />
        </view>
      </view>
      <!-- <view class="orderDetailShow" @tap="orderDetailDataShowClick" wx:if="{{dinner}}">
        <view>查看已确认的菜单</view>
        <image class="{{orderDetailTransform}}" src="{{orderDetailImg}}" />
      </view> -->
      <!-- 已经提交菜单显示 -->
      <view class="list orderDetailData" wx:if="{{orderDetailDataShow}}" wx:if="{{dinner}}">
        <repeat for="{{ orderDetailData.products }}" item="item">
          <view class="listCon" data-id="{{ item.product_infomation.product.id }}">
            <view class="sample">
              <image class="organic_rice_pic" src="{{ item.product_infomation.product.img }}" />
            </view>
            <view class="info">
              <view class="title">{{ item.product_infomation.product.name }}</view>
              <view class="salesVolume">{{ item.num }}份</view>
              <view class="price">
                <span>
                  ￥<p>{{ item.product_infomation.product.discount }}</p>
                </span>
              </view>
            </view>
            <view class="listConOperat">
              <view class="numShow">×{{ item.num }}</view>
            </view>
          </view>
        </repeat>
        <view class="dataNullShow" wx:if="{{orderDetailData.products.length == 0 || orderDetailData == null}}">暂无已确认菜品</view>
      </view>
    </view>
    <view class="operat operat-true">
      <view class="foot" @tap="foot">点餐</view>
      <view class="pay" @tap="upDataMoney">结账</view>
    </view>
    <view class="operat operat-false" wx:if="{{!dinner}}">
      <view class="foot" @tap="foot">点餐</view>
    </view>
    <movable-view direction="all" wx:if="{{dinner}}" style="transform:translateX(100vh) translateY(0vh) translateZ(0px) scale(1);">
      <button type="primary" open-type="share" data-name="pageShare" id="share" wx:if="{{dinner}}">
        <image src="/img/primaryImg.png" />
      </button>
    </movable-view>
  </scroll-view>
</movable-area>
</template>

<script>
import wepy from 'wepy'
export default class Shoppingcart extends wepy.page {
  config = {
    navigationBarTitleText: '购物车'
  }
  components = {
  }
  mixins = []
  data = {
    authorizationButton: true, // 控制授权按钮是否显示
    cartData: [], // 已经选取的菜
    dinner: true, // 用户身份(请客true/被请false)
    userInfo: null,
    openId: '',
    totalPrice: 0, // 总价
    remarks: '', // 备注信息
    upCartData: [],
    password: '', // 房间密码
    passwordShow: false, // 密码是否显示
    deskName: '', // 桌子名次(桌号)
    orderDetailData: null, // 已提交菜品数据
    orderDetailDataShow: true, // 已提交的菜品是否显示
    orderDetailImg: '/img/down.png', // 已提交的菜品按钮图片
    orderNumber: '', // 订单号，用于支付功能
    orderDetailTransform: 'orderDetailShowUp', // 图片方向
    refreshImage: 'refreshImage_1',
    deleteRoomDomShow: true
  }

  methods = {

  }
  // 进入点餐页
  foot() {
    this.$navigate('/pages/cookbook')
  }
  onLoad(options) {
    this.openId = this.$parent.globalData.openId
    if (options.masteropenid === this.openId) {
      this.dinner = true
      this.$parent.globalData.dinner = true
    } else {
      this.dinner = false
      this.$parent.globalData.dinner = false
      this.openId = options.masteropenid
      this.$parent.globalData.openId = this.openId
    }
    this.deskName = options.deskname
    // this.dinner = true
    // this.$parent.globalData.dinner = true
    this.$parent.globalData.bistro_id = options.bistro_id
    this.qr_code = options.qrcode
    this.$parent.globalData.qr_code = options.qrcode
    // 获取用户信息
    // this.onGotUserInfo()
    // 获取购物车菜单列表
    this.getShoppingCart()
    // 获取桌子名称
    this.deskName = this.$parent.globalData.deskName
    // 获取当前桌子的请客单列表(用于获取密码)
    this.getRoomList()
    wx.getStorage({
      key: 'menuAppend',
      success: res => {
        if (res.data) {
          // 确认菜单(追加菜单)
          this.$parent.globalData.order_id = res.data
          // 获取订单详情
          this.getOrderDetail()
        }
      }
    })
  }
  onShow() {
    // 获取购物车菜单列表
    this.getShoppingCart()
  }
  // 删除房间
  deleteRoom() {
    if (this.orderDetailData != null) {
      if (this.orderDetailData.products.length > 0) {
        return
      }
    }
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/deleteDinner`,
      method: 'DELETE',
      header: {
        AuthrizeOpenId: this.$parent.globalData.openId
      },
      data: {
        qr_code: this.$parent.globalData.qr_code
      },
      success: data => {
        if (data.data.success) {
          // 进入商家封面页，选择单人或者创建房间，或者更换桌子扫码
          this.$redirect('/pages/home')
        } else {
          wx.showModal({
            title: '',
            content: data.data.errmsg
          })
        }
      }
    })
  }
  // 获取当前桌子的请客单列表(用于获取房间密码)
  getRoomList() {
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/nowDinner`,
      method: 'GET',
      header: {
        AuthrizeOpenId: this.$parent.globalData.openId
      },
      data: {
        qr_code: this.$parent.globalData.qr_code
      },
      success: data => {
        if (data.data.success) {
          // 获取当前桌请客列表
          let roomlistData = data.data.data
          let i = 0
          for (i in roomlistData) {
            if (this.openId === roomlistData[i].master_open_id) {
              this.password = roomlistData[i].password
              break
            }
          }
          this.$apply()
        } else {
          wx.showModal({
            title: '',
            content: data.data.errmsg
          })
        }
      }
    })
  }
  // 获取购物车菜单列表
  getShoppingCart() {
    // 如果用户信息为空则不执行请求
    if (!this.openId) {
      return
    }
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/getShoppingCart`,
      method: 'GET',
      header: {
        AuthrizeOpenId: this.openId
      },
      success: data => {
        if (data.data.success) {
          this.cartData = data.data.data.shopping_cart.list
          // let i = 0
          // this.totalPrice = 0
          // for (i in this.cartData) {
          //   this.totalPrice += (this.cartData[i].product_information.discount * this.cartData[i].num)
          // }
          this.$apply()
        } else {
          wx.showModal({
            title: '',
            content: data.data.errmsg
          })
        }
      }
    })
  }
  // 获取备注信息
  getRemarks(e) {
    this.remarks = e.detail.value
  }
  confirmOrderClick() {
    if (this.cartData.length === 0) {
      wx.showModal({
        title: '',
        content: '请先点餐'
      })
      return
    }
    wx.showModal({
      title: '',
      content: '确认提交订单？',
      success: res => {
        if (res.confirm) {
          // 确认订单
          this.confirmOrder()
        }
      }
    })
  }
  // 确认订单
  confirmOrder() {
    let cartData = this.cartData
    this.upCartData = []
    // 根据已经选中的菜品数据生成需要提交订单从菜品数据
    let i = 0
    for (i in cartData) {
      let cartJson = {'product_id': cartData[i].product_id, 'num': cartData[i].num}
      this.upCartData.push(cartJson)
    }
    wx.getStorage({
      key: 'menuAppend',
      success: res => {
        if (res.data) {
          // 确认菜单(追加菜单)
          this.$parent.globalData.order_id = res.data
          this.runConfirmOrderAppend(this.upCartData)
        }
      },
      fail: res => {
        // 确认菜单
        this.runConfirmOrder(this.upCartData)
      }
    })
  }
  // 确认菜单数据提交
  runConfirmOrder(upCartData) {
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/addOrder`,
      method: 'POST',
      header: {
        AuthrizeOpenId: this.$parent.globalData.openId
      },
      // data: upCartData,
      data: {
        exchange_list: upCartData,
        qr_code: this.$parent.globalData.qr_code,
        remarks: this.remarks
      },
      success: data => {
        if (data.data.success) {
          let orderId = data.data.data.order.id
          // 订单ID存入全局变量
          this.$parent.globalData.order_id = orderId
          // 保存用户已经下过单的标记，在该值清除之前，下单为追加
          wx.setStorage({
            key: 'menuAppend',
            data: orderId
          })
          let bistroId = data.data.data.order.bistro_id
          // let position_id = data.data.data.order.position_id
            // 打印订单
          this.printOrder(orderId, bistroId)
          // 获取购物车菜单列表
          this.getShoppingCart()
          // 获取订单详情
          this.getOrderDetail()
          // 返回上一页
          wx.showModal({
            title: '',
            content: '确认成功'
          })
        } else {
          wx.showModal({
            title: '',
            content: data.data.errmsg
          })
        }
      }
    })
  }
  // 确认菜单数据提交(追加菜单)
  runConfirmOrderAppend(upCartData) {
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/addVegetable/${this.$parent.globalData.order_id}`,
      method: 'POST',
      header: {
        AuthrizeOpenId: this.$parent.globalData.openId
      },
      // data: upCartData,
      data: {
        exchange_list: upCartData,
        qr_code: this.$parent.globalData.qr_code,
        remarks: this.remarks
      },
      success: data => {
        if (data.data.success) {
          let orderId = data.data.order_id
          let orderProductsIds = data.data.order_products_ids
          // 打印订单
          this.printOrderAppend(orderId, orderProductsIds)
          // 获取购物车菜单列表
          this.getShoppingCart()
          // 获取订单详情
          this.getOrderDetail()
          // 返回上一页
          wx.showModal({
            title: '',
            content: '确认成功'
          })
        } else {
          wx.showModal({
            title: '',
            content: data.data.errmsg
          })
        }
      }
    })
  }
  // 打印订单(追加订单打印)
  printOrderAppend(orderId, orderProductsIds) {
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/printerOrderProduct`,
      method: 'POST',
      header: {
        AuthrizeOpenId: this.openId
      },
      data: {
        order_id: orderId,
        order_products_ids: orderProductsIds,
        remarks: this.remarks
      },
      success: data => {
        if (!data.data.success) {
          wx.showModal({
            title: '',
            content: data.data.errmsg
          })
        }
      }
    })
  }
  // 打印订单
  printOrder(orderId, bistroId) {
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/printerOrder`,
      method: 'POST',
      header: {
        AuthrizeOpenId: this.openId
      },
      data: {
        order_id: orderId,
        bistro_id: bistroId
      },
      success: data => {
        if (!data.data.success) {
          wx.showModal({
            title: '',
            content: data.data.errmsg
          })
        }
      }
    })
  }
  // 删除购物车中的菜
  deleteShoppingCart(e) {
    let delId = e.currentTarget.dataset.id
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/deleteShoppingCart`,
      method: 'DELETE',
      header: {
        AuthrizeOpenId: this.openId
      },
      data: {
        product_ids: [delId]
      },
      success: data => {
        if (data.data.success) {
          // 刷新数据
          this.getShoppingCart()
        } else {
          wx.showModal({
            title: '',
            content: data.data.errmsg
          })
        }
      }
    })
  }
  // 选择购物车商品,获取商品在数组中的下标
  selCommodity(e) {
    this.cartIndex = e.detail.value
    this.allPrice = this.getAllPrice()
  }
  getAllPrice() {
    let allPrice = 0
    let index = this.cartIndex
    let allListData = this.cartList
    for (var i in index) {
      allPrice += allListData[index[i]].num * allListData[index[i]].good_information.cost_beans
    }
    return allPrice
  }
  quantityUp(e) {
    // 商品数量
    // let num = e.currentTarget.dataset.num
    // 下标
    let index = e.currentTarget.dataset.index
    let cartDataList = this.cartData
    cartDataList[index].num += 1
    let upCartDataJson = []
    let i = 0
    for (i in cartDataList) {
      let cartJson = {'product_id': cartDataList[i].product_id, 'num': cartDataList[i].num}
      upCartDataJson.push(cartJson)
    }
    // 提交购物车数据
    this.setUpCartData(upCartDataJson)
    this.$apply()
  }
  quantityDown(e) {
    // 商品数量
    let num = e.currentTarget.dataset.num
    // 下标
    let index = e.currentTarget.dataset.index
    let cartDataList = this.cartData
    if (num === 1) {
      return
    }
    cartDataList[index].num -= 1
    let upCartDataJson = []
    let i = 0
    for (i in cartDataList) {
      let cartJson = {'product_id': cartDataList[i].product_id, 'num': cartDataList[i].num}
      upCartDataJson.push(cartJson)
    }
    // 提交购物车数据
    this.setUpCartData(upCartDataJson)
    this.$apply()
  }
  setUpCartData(upCartDataJson) {
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/addShoppingCartOneTime`,
      method: 'POST',
      header: {
        AuthrizeOpenId: this.openId
      },
      data: {
        addlist: upCartDataJson
      },
      success: data => {
        if (data.data.success) {
          // 获取购物车菜单列表
          this.getShoppingCart()
          this.$apply()
        } else {
          wx.showModal({
            title: '',
            content: data.data.errmsg
          })
        }
      }
    })
  }
  // 分享页面
  onShareAppMessage(res) {
    let url = `/pages/shoppingCart?deskname=${this.deskName}&bistro_id=${this.$parent.globalData.bistro_id}&qrcode=${this.$parent.globalData.qr_code}&masteropenid=${this.$parent.globalData.openId}`
    return {
      title: `${this.userInfo.nickName}的邀请`,
      desc: '',
      // 图片路径
      imageUrl: this.userInfo.avatarUrl,
      path: url
    }
  }
  async upDataMoney(e) {
    if (this.totalPrice === 0) {
      wepy.showModal({
        title: '',
        content: '请先点餐',
        showCancel: false
      })
      return
    }
    wx.showModal({
      title: '',
      content: '确认支付？',
      success: res => {
        if (res.confirm) {
          // 确认订单
          this.submitDataMoney()
        }
      }
    })
  }
  // 买单
  async submitDataMoney(e) {
    this.$redirect('/pages/pay')
    return
    // loading图片显示
    // this.loadingImgShow = true
    // this.$apply()
    await wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/beanPay`,
      method: 'POST',
      header: {
        AuthrizeOpenId: this.$parent.globalData.openId
      },
      data: {
        order_number: this.orderNumber
      },
      success: data => {
        if (data.data.success) {
          wx.requestPayment({
            'timeStamp': data.data.data.config.timestamp,
            'nonceStr': data.data.data.config.nonceStr,
            'package': data.data.data.config.package,
            'signType': data.data.data.config.signType,
            'paySign': data.data.data.config.paySign,
            'success': data => {
              // loading图片隐藏
              // this.loadingImgShow = false
              this.$apply()
              // wepy.showModal({
              //   title: '',
              //   content: '买单成功',
              //   showCancel: false
              // })
              // 销毁当前页{跳转}
              this.$redirect('/pages/pay')
            },
            'fail': data => {
              wepy.showModal({
                title: '',
                content: '买单失败',
                showCancel: false
              })
            }
          })
        } else {
          // this.loadingImgShow = false
          this.$apply()
          wx.showModal({
            title: '',
            content: data.data.errmsg
          })
        }
      }
    })
  }
  async onGotUserInfo() {
    // 查看是否授权
    wx.getSetting({
      success: res => {
        if (res.authSetting['scope.userInfo']) {
          // 已经授权，可以直接调用 getUserInfo 获取头像昵称
          wx.getUserInfo({
            success: res => {
              this.userInfo = res.userInfo
              if (this.userInfo) {
                this.authorizationButton = false
                this.avatarUrl = this.userInfo.avatarUrl
                this.nickName = this.userInfo.nickName
                // 数据生效
                this.$apply()
                // 提交用户信息
                this.setUserInfo(this.userInfo)
                // 登陆
                // this.userLogin(this.userInfo)
                this.$parent.globalData.userInfo = this.userInfo
                this.$apply()
              }
            }
          })
        }
      }
    })
  }
    // 提交用户信息
  async setUserInfo(userInfo) {
    if (this.$parent.globalData.openId) {
      return
    }
    wepy.login({
      success: res => {
        if (res.code) {
          this.code = res.code
          wx.request({
            url: `${this.$parent.globalData.requestUrl}/api/createOrUpdateUser`,
            method: 'POST',
            data: {
              code: res.code,
              nick_name: this.userInfo.nickName,
              profile: this.userInfo.avatarUrl
            },
            success: data => {
              if (data.data.success) {
                // 获取用户信息,及openID  并存入全局
                this.userInfo = data.data.user
                this.openId = this.userInfo.open_id
                this.$parent.globalData.userInfo = this.userInfo
                this.$parent.globalData.openId = this.openId
                this.$apply()
              } else {
                wx.showModal({
                  title: '',
                  content: data.data.errmsg
                })
              }
            }
          })
        } else {
          console.log('登录失败！' + res.errMsg)
        }
      }
    })
  }
  // 获取订单详情
  getOrderDetail() {
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/orderDetail/${this.$parent.globalData.order_id}`,
      method: 'GET',
      header: {
        AuthrizeOpenId: this.openId
      },
      success: data => {
        if (data.data.success) {
          this.orderDetailData = data.data.data.order
          let i = 0
          let products = this.orderDetailData.products
          let price = 0
          this.orderNumber = this.orderDetailData.order_number
          if (products.length > 0) {
            this.deleteRoomDomShow = false
          }
          // 计算总价
          for (i in products) {
            price += parseFloat(products[i].total_amount)
          }
          this.totalPrice = price
          this.$apply()
        } else {
          wx.showModal({
            title: '',
            content: data.data.errmsg
          })
        }
      }
    })
  }
  // 已提交菜品是否显示
  orderDetailDataShowClick() {
    if (this.orderDetailDataShow) {
      this.orderDetailDataShow = false
      this.orderDetailImg = '/img/down.png'
      this.orderDetailTransform = 'orderDetailShowDown'
    } else {
      this.orderDetailDataShow = true
      this.orderDetailImg = '/img/down.png'
      this.orderDetailTransform = 'orderDetailShowUp'
    }
  }
  // 监听屏幕滚动 判断上下滚动
  onPageScroll(ev) {
    // 判断是否触顶,刷新已点菜品
    if (ev.scrollTop === 0) {
      // 获取购物车菜单列表
      this.getShoppingCart()
    }
  }
  cartDataRefresh() {
    if (this.refreshImage === 'refreshImage_1') {
      this.refreshImage = 'refreshImage_2'
    } else {
      this.refreshImage = 'refreshImage_1'
    }
    // 获取购物车菜单列表
    this.getShoppingCart()
  }
}
</script>
