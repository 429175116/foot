<style lang="less">
  .containertop {
    width: 95%;
    height: 85rpx;
    line-height: 85rpx;
    margin: 15rpx auto;
  }

  .containertopSearch {
    height: 80rpx;
    line-height: 80rpx;
    border: 3rpx solid #B2B2B2;
    border-radius: 40rpx;
    text-align: center;
    font-size: 40rpx;
  }

  .containerleft {
    height: 100vh;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
    background: #eee;
    float: left;
    width: 25%;
  }
  .menuClass {
    width: 100%;
    height: 100rpx;
    line-height: 100rpx;
    /*background: #eee;*/
    display: inline-block;
    text-align: center;
    border-bottom: 1rpx solid #E5E5E5;
  }
  .active {
    background: #fff;
    color: #E64340;
  }
  .container1 {
    height: 100vh;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
    /*background: #eee;*/
    float: right;
    width: 75%;
  }
  .organic_rice{
    background:#fff;
    width:100%;
    border-bottom:1px solid #E5E5E5;
    min-height:150rpx;
    height: auto;
    display:flex;
    padding:25rpx 0;
  }
  .organic_rice_pic{
    float:left;
    flex:0 0 150rpx;
    height:150rpx;
    margin:0 25rpx;
  }
  .organic_rice_text{
    float:left;
    flex:1;
  }
  .rice {
    font-size:30rpx;
  }
  .sale{
    color:#999999;
    font-size:24rpx;
  }
  .discount{
    color:#E64340;
  }
  .discount p{
    text-decoration:line-through;
  }
  .discount_price{
    color:#B2B2B2;
    font-size:25rpx;
  }

  .increase{
    flex:0 0 32px;
    font-weight:400;
    padding:3px;
    text-align:center;
    display:flex;
    align-items:center;
    justify-content:center;
  }
  .iconfont{
    line-height:32px;
    font-size:24px;
    color:#E64340;
    font-family:"iconfont" !important;
    font-style:normal;
    -webkit-font-smoothing:antialiased;
    -webkit-text-stroke-width:.2px;
    -moz-osx-font-smoothing:grayscale;
    color: #E64340
  }
  .decrease>.iconfont,.increase>.iconfont {
    line-height:32px;
    font-size:24px;
    color:#E64340;
  }

  .icon-cart{
    line-height:100rpx;
    text-align:center;
    width:100rpx;
    font-size:64rpx;
    color:#efefef;
    border-radius:50%;
    background:#999;
  }
  .icon-cart.products{
    background:#E64340;
    color:#fff;
  }
  .cart{
    z-index:10;
    position:fixed;
    bottom:10px;
    left:10px;
    width:100rpx;
    height:100rpx;
    background-color: #E64340;
    border-radius: 50rpx;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .cart image{
    width: 70rpx;
    height: 70rpx;
  }
  .bardge{
    position:absolute;
    top:0;
    right:0;
    width:40rpx;
    height:40rpx;
    font-size:18rpx;
    text-align:center;
    line-height:40rpx;
    background:#4a4a4a;
    color:#fff;
    border-radius:50%;
  }
  .main-wrapper {
    position:fixed;
    top:0;
    left:0;
    right:0;
    bottom:0;
    background:rgba(0,0,0,0.6);
  }
  .shop-cart-wrapper {
    position:fixed;
    bottom:0;
    left:0;
    right:0;
    min-height:500rpx;
    max-height: 100%;
    height: auto;
    background:#fff;
  }
  .operation-wrapper {
    height:100rpx;
    border-bottom:1rpx solid #efefef;
    line-height:100rpx;
    display:flex;
    padding:0 10px;
    justify-content:space-between;
  }
  .remove-all-wrapper {
    color:#999;
    font-size:12px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .remove-all-wrapper image {
    width: 50rpx;
    height: 50rpx;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .products-wrapper {
    min-height:300rpx;
    max-height: 700rpx;
    height: auto;
    overflow-y:auto;
  }
  .product-item {
    display:flex;
    height:150rpx;
    padding:15rpx 10px;
    align-items:center;
    border-bottom:1rpx solid #efefef;
  }
  .product-pic {
    flex:0 0 120rpx;
  }
  .product-pic>image {
    width:100%;
    height:120rpx;
  }
  .product-info {
    padding-left:10px;
    flex:1;
    display:flex;
    flex-direction:column;
    border-radius:4px;
  }
  .product-cart-control {
    flex:0 0 120px;
    align-self:flex-end;
  }
  .controller-wrapper {
    display:flex;
    width:120px;
    overflow:visible;
    border-radius:0;
    color:#d6d6d6;
    height:32px;
  }
  .controller-wrapper {
    flex:0 0 120px;
    align-self:flex-end;
    margin-right:25rpx;
  }
  .decrease,.increase {
    flex:0 0 32px;
    font-weight:400;
    padding:3px;
    text-align:center;
    display:flex;
    align-items:center;
    justify-content:center;
  }
  .count-wrapper {
    flex:1;
    display:flex;
    justify-content:center;
  }
  .count {
    flex:1;
    text-align:center;
    display:inline-block;
    padding:3px;
    line-height:26px;
    color:#666;
  }
  .payment-wrapper {
    height:100rpx;
    display:flex;
    background:#efefef;
    justify-content:space-between;
  }
  .price-wrapper {
    display:flex;
    flex-direction:column;
    padding-left:150rpx;
  }
  .price {
    color:#E64340;
    font-size:18px;
  }
  .delivery-price {
    font-size:12px;
    color:#999;
  }
  .goto-payment-wrapper {
    background:#E64340;
    width:200rpx;
    text-align:center;
    color:#fff;
    line-height:100rpx;
  }
  .originalPrice{
    color:#E64340;
    text-decoration:line-through;
  }
  .currentPrice{
    color:#E64340;
  }
  checkbox .wx-checkbox-input{
   border-radius: 50%;/* 圆角 */
   width: 40rpx; /* 背景的宽 */
   height: 40rpx; /* 背景的高 */
  }
  checkbox .wx-checkbox-input.wx-checkbox-input-checked{
    border: none;
    background: #fc6800;
  }
  checkbox .wx-checkbox-input.wx-checkbox-input-checked::before{
    border-radius: 50%;/* 圆角 */
    width: 40rpx;/* 选中后对勾大小，不要超过背景的尺寸 */
    height: 40rpx;/* 选中后对勾大小，不要超过背景的尺寸 */
    line-height: 40rpx;
    text-align: center;
    font-size:30rpx; /* 对勾大小 30rpx */
    color:#fff; /* 对勾颜色 白色 */
    background: transparent;
    transform:translate(-50%, -50%) scale(1);
    -webkit-transform:translate(-50%, -50%) scale(1);
  }
  scroll-view{
    height: auto;
  }
</style>
<template>
  <scroll-view scroll-y="hidden">
    <view>
      <view class="containertop">
        <input type="text" class="containertopSearch" bindinput="getPawData" placeholder="搜索商品名称">
      </view>
      <view class="containerleft">
        <repeat for="{{ menuClass }}" item="item">
          <li wx:if='{{ item.id == menuClassId }}' class="menuClass active" @tap="changeMenuClass" data-id='{{ item.id }}'>{{ item.name }}</li>
          <li wx:else class="menuClass notactive" @tap="changeMenuClass" data-id='{{ item.id }}'>{{ item.name }}</li>
        </repeat>
      </view>
      <view class="container1">
        <repeat for="{{ menu }}" item="item">
          <view class="organic_rice" data-id="{{ item.id }}">
            <image class="organic_rice_pic" src="{{ item.img }}" />
            <view class="organic_rice_text">
              <view class="rice">{{ item.name }}</view>
              <view class="sale">{{ item.description }}</view>
              <view class="sale">销量{{ item.sale_count }} | {{ item.status }}</view>
              <view class="discount">
                ￥<p>{{ item.price }}</p>
                {{ item.discount }}
                <span class="discount_price">元/份</span>
              </view>
            </view>
            <view class="increase" data-id="{{ item.id }}" @tap="setCart">
              <icon class="iconfont">+</icon>
            </view>
          </view>
        </repeat>
        <view wx:if="{{menu.length == 0}}" class="dataNullShow">暂无菜品</view>
      </view>
      <view>
        <view class="cart" @tap="cartClick">
          <text class="bardge" wx:if="{{ cartData.length != 0 }}">{{ cartData.length }}</text>
          <!-- <icon class="iconfont icon-cart products" @tap="cartClick">车</icon> -->
          <image src="/img/cartWhite.png" />
        </view>
        <view class="main-wrapper" wx:if="{{showSelFont}}">
          <view class="shop-cart-wrapper">
            <view class="operation-wrapper">
              <view class="select-all-wrapper">
                <!-- <checkbox-group>
                  <checkbox value="true" checked=""></checkbox>选择全部
                </checkbox-group> -->
              </view>
              <view class="remove-all-wrapper" @tap="delCartDataAll">
                <!-- <icon class="iconfont">×</icon> -->
                <image src="/img/delete.png" />
                清空
              </view>
            </view>
            <view class="products-wrapper">
              <repeat for="{{ cartData }}" item="item">
                <view class="product-item" data-id="{{ item.id }}">
                  <!-- <view>
                    <checkbox-group data-wpychangeselect-a="">
                      <checkbox value="1" checked=""></checkbox>
                    </checkbox-group>
                  </view> -->
                  <view class="product-pic">
                    <image src="{{ item.img }}" />
                  </view>
                  <view class="product-info">
                    <text>{{ item.name }}</text>
                    <text class="originalPrice">￥{{ item.price }}</text>
                    <text class="currentPrice">￥{{ item.discount }}</text>
                  </view>
                  <view class="product-cart-control">
                    <view class="controller-wrapper">
                      <view class="decrease" data-num="{{ item.num }}" data-id="{{ item.id }}" @tap="numDown">
                        <icon class="iconfont icon-decrease" style="color: #E64340">-</icon>
                      </view>
                      <view class="count-wrapper" data-num="{{ item.num }}" index="0">
                        <picker  data-num="{{ item.num }}" range="[10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190]" value="0" index="0">
                          <view class="count">{{ item.num }}</view>
                        </picker>
                      </view>
                      <view class="increase"  data-num="{{ item.num }}" data-id="{{ item.id }}" @tap="numUp">
                        <icon class="iconfont" style="color: #E64340">+</icon>
                      </view>
                    </view>
                  </view>
                </view>
              </repeat>
              
            </view>
            <view class="payment-wrapper">
              <view class="price-wrapper">
                <text class="price">￥{{allPrice}}元</text>
                <text class="delivery-price">{{cartData.length}}样{{allNum}}份</text>
              </view>
              <view class="goto-payment-wrapper" @tap="settlement">点好了</view>
            </view>
          </view>
        </view>
      </view>
    </view>
  </scroll-view>
</template>

<script>
  import wepy from 'wepy'
  export default class cookbook extends wepy.page {
    config = {
      navigationBarTitleText: '点餐啦'
    }
    components = {//, ReceiveCoupon

    }
    data = {
      carStatus: false,
      carNum: 100,
      mynum: 20,
      product: [],
      showOrHide: 'all-hide',
      shoppingCar: {
        num: 0,
        product: []
      },
      menu: [],
      menuClass: [],
      menuClassId: 0,
      cartData: [],
      active: 'notactive',
      showSelFont: false,
      allPrice: 0,
      allNum: 0
    }

    methods = {
      handleViewTap() {
        console.log('clicked')
      }
    }

    watch = {
      'categoryid': function (newValue, oldValue) {

      }
    }
    cartClick() {
      if (this.showSelFont) {
        this.showSelFont = false
      } else {
        this.showSelFont = true
        // 计算份数
        this.allNum = this.countAllQuantity(this.cartData)
      }
    }
    getStorage() {
      this.shoppingCar = wepy.getStorageSync('shoppingCar')
    }

    plusCount() {
      this.showOrHide = 'all-show'
    }
    // 搜索事件输入触发
    getPawData(e) {
      this.setpawData = e.detail.value
      if (this.setpawData === '') {
        return
      }
      this.menuClassId = ''
      wx.request({
        url: `${this.$parent.globalData.requestUrl}/api/productList`,
        method: 'GET',
        data: {
          bistro_id: this.$parent.globalData.bistro_id,
          name: this.setpawData
        },
        success: data => {
          if (data.data.success) {
            // 获取用户信息,及openID  并存入全局
            this.menu = data.data.data.products
            for (let i = 0; i < this.menu.length; i++) {
              // 加入选择个数，默认为0，用于和点餐时存储数量
              this.menu[i]['num'] = 1
            }
            this.$apply()
          } else {
            wx.showModal({
              title: '',
              content: data.data.errmsg
            })
          }
        }
      })
    }
    changeMenuClass(e) {
      this.menuClassId = e.currentTarget.dataset.id
      // 获取菜单分类下的列表
      this.getMenu()
    }
    getMenu() {
      wx.request({
        url: `${this.$parent.globalData.requestUrl}/api/listWithCategoryId`,
        method: 'GET',
        data: {
          product_category_id: this.menuClassId
        },
        success: data => {
          if (data.data.success) {
            // 获取用户信息,及openID  并存入全局
            this.menu = data.data.data.products.data
            for (let i = 0; i < this.menu.length; i++) {
              // 加入选择个数，默认为0，用于和点餐时存储数量
              this.menu[i]['num'] = 1
            }
            this.$apply()
          } else {
            wx.showModal({
              title: '',
              content: data.data.errmsg
            })
          }
        }
      })
    }
    // 菜品加入购物车
    setCart(e) {
      let menuId = e.currentTarget.dataset.id
      // 根据菜品ID给购物车加入选中的菜品数据
      // this.cartData // 购物车数据
      // this.menu // 菜单数据
      let i = 0
      let x = 0
      let menu = this.menu
      // 多次点击一个则数量增加
      for (x in this.cartData) {
        if (menuId === this.cartData[x].id) {
          this.cartData[x].num += 1
          // 计入总价
          this.allPrice += parseFloat(this.cartData[x].discount)
          return
        }
      }
      // 不重复点击则种类增加
      for (i in menu) {
        if (menuId === menu[i].id) {
          this.cartData.push(menu[i])
          // 计入总价
          this.allPrice += parseFloat(menu[i].discount)
          return
        }
      }
      this.allNum += 1
    }
    // 数量减------
    numDown(e) {
      let menuId = e.currentTarget.dataset.id
      let num = e.currentTarget.dataset.num
      let i = 0
      for (i in this.cartData) {
        if (menuId === this.cartData[i].id) {
          this.cartData[i].num -= 1
          // 计入总价
          this.allPrice -= parseFloat(this.cartData[i].discount)
          if (num === 1) {
            this.cartData.splice(i, 1)
          }
          break
        }
      }
      // 计算份数
      this.allNum = this.countAllQuantity(this.cartData)
    }
    // 数量加++++++
    numUp(e) {
      let menuId = e.currentTarget.dataset.id
      // let num = e.currentTarget.dataset.num
      let i = 0
      for (i in this.cartData) {
        if (menuId === this.cartData[i].id) {
          this.cartData[i].num += 1
          // 计入总价
          this.allPrice += parseFloat(this.cartData[i].discount)
          break
        }
      }
      // 计算份数
      this.allNum = this.countAllQuantity(this.cartData)
    }
    // 计算份数
    countAllQuantity(numList) {
      let i = 0
      let num = 0
      for (i in numList) {
        num += numList[i].num
      }
      return num
    }
    // 清空
    delCartDataAll() {
      // 清空购物车数据
      this.cartData = []
      // 计入总价
      this.allPrice = 0
    }
    // 保存点菜数据到服务器，用于显示在订单页
    settlement() {
      // 控制结算显示隐藏
      this.cartClick()
      // wx.navigateBack({ changed: true })
      // return
      // this.cartData 已经选中的菜品
      let upCartData = []
      let cartData = this.cartData
      // 根据已经选中的菜品数据生成需要提交订单从菜品数据
      let i = 0
      for (i in cartData) {
        let cartJson = {'product_id': cartData[i].id, 'num': cartData[i].num}
        upCartData.push(cartJson)
      }
      wx.request({
        url: `${this.$parent.globalData.requestUrl}/api/addShoppingCartOneTime`,
        method: 'POST',
        header: {
          AuthrizeOpenId: this.$parent.globalData.openId
        },
        // data: upCartData,
        data: {
          addlist: upCartData
        },
        success: data => {
          if (data.data.success) {
            // 返回上一页
            wx.navigateBack({ changed: true })
          } else {
            wx.showModal({
              title: '',
              content: data.data.errmsg
            })
          }
        }
      })
      // 如果接口返回成功，则进入菜单显示页
      // this.$navigate('/pages/shoppingCart')
    }
    // productCategotyList() {
    //   let params = {
    //     bistro_id: 1
    //   }
    //   productCategotyList(params).then((ret) => {
    //     var category = ret.data.product_categories.data
    //     var i = 0
    //     for (i in category) {
    //       category[i].hidden = 0
    //     }
    //     this.category = category
    //     this.category[0].hidden = 1
    //     this.categoryid = this.category[0]['id']
    //     this.$apply()
    //     this.$invoke('ShopList', 'changeCategoryId')
    //   })
    // }

    // getAllBanner() {
    //   getAllBanners().then((ret) => {
    //     if (ret.success) {
    //       ret.data.forEach(v => {
    //         this.bannerList.push({img_url: v.pic})
    //       })
    //     }
    //     this.$apply()
    //   })
    // }

    onLoad(e) {
      // this.bistro_id = this.$parent.globalData.bistro_id
      // this.productCategotyList()
      // 获取菜单分类
      this.getMenuClass()
      this.$apply()
    }
    getMenuClass() {
      wx.request({
        url: `${this.$parent.globalData.requestUrl}/api/productCategotyList`,
        method: 'GET',
        data: {
          bistro_id: this.$parent.globalData.bistro_id
        },
        success: data => {
          if (data.data.success) {
            this.menuClass = data.data.data.product_categories.data
            this.menuClassId = this.menuClass[0].id
            // 获取菜单分类下的列表
            this.getMenu()
            this.$apply()
          } else {
            wx.showModal({
              title: '',
              content: data.data.errmsg
            })
          }
        }
      })
    }
  }
</script>
