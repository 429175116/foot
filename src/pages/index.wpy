<style lang="less">
  #getUserInfo {
    position:fixed;
    top:0;
    width:750rpx !important;
    height:100% !important;
    padding:0rpx !important;
    z-index:999;
    background-color:rgba(255, 255, 255, 0);
    color:#fff;
  }

  .user{
    width: 750rpx;
    height: 470rpx;
  }
  .bg{
    width: 1500rpx;
    height: 1500rpx;
    border-radius: 750rpx;
    position: absolute;
    top: -1033rpx;
    left: -375rpx;
    overflow:hidden;
    z-index: -10;
    // padding: 150rpx;
  }
  .bg image{
    width: 750rpx;
    height: 470rpx;
    position: relative;
    left: 375rpx;
    top: 1040rpx;
  }
  .user .info{
    z-index: 3;
  }
  
  .profile {
    position: relative;
    width: 180rpx;
    height: 180rpx;
    display: block;
    margin: 130rpx auto 20rpx auto;
    border-radius: 90rpx;
  }

  .welcome {
    color: #fff;
    width: 100%;
    font-size: 40rpx;
    text-align: center;
  }
  .singleOrOrder {
    width: 100%;
  }

  .orderButton {
    width: 515rpx;
    height: 130rpx;
    margin: 40rpx auto;
    padding: 20rpx 0;
    color: #fc431d;
    box-shadow: 0px 0px 5px #ccc;
  }

  .littletubiao {
    width: 100rpx;
    height: 100rpx;
    float: left;
    margin-left: 30%;
  }

  .notlittletubiao {
    float: left;
    font-size: 40rpx;
    /*margin-top: 10rpx;*/
    margin-left: 30rpx;

  }
  .bottomInfo{
    width: 750rpx;
    height: 240rpx;
    margin-top: 120rpx;
    line-height: 95rpx;
    text-align: center;
    color: #999;
    font-size: 25rpx;
  }
  .bottomInfo image{
    width: 750rpx;
    height: 240rpx;
    position: absolute;
    z-index: -10;
    left:0rpx;
  }
  scroll-view{
    height: auto;
  }
</style>
<template>
  <scroll-view scroll-y="hidden">
    <view>
      <view class="user">
        <view class="bg">
          <image src="/img/homeUserBg.png" />
        </view>
        <view class="info">
          <image class="profile" src="{{avatarUrl}}" />
          <view class="welcome" wx:if="{{nickName != ''}}">欢迎,{{nickName}}</view>
        </view>
      </view>

      <view class="singleOrOrder">
        <!-- <button @tap="single" class="orderButton">
          <image class="littletubiao" src="http://140.143.203.12:8094/storage/images/xiaotubiao1.png" />
          <view class="notlittletubiao">个人</view>
        </button> -->
        <button @tap="newroom" class="orderButton">
          <image class="littletubiao" src="http://140.143.203.12:8094/storage/images/xiaotubiao2.png" />
          <view class="notlittletubiao">创建房间</view>
        </button>
        <button @tap="goorder" class="orderButton">
          <image class="littletubiao" src="http://140.143.203.12:8094/storage/images/xiaotubiao2.png" />
          <view class="notlittletubiao">进入房间</view>
        </button>
      </view>
      <view class="bottomInfo">
        由贝肯伟提供技术支持
        <image src="/img/homeUserBg.png" />
      </view>
    </view>
    <!-- 授权按钮部分 -->
    <view>
      <button open-type="getUserInfo" wx:if="{{authorizationButton}}" id='getUserInfo' lang="zh_CN" @getuserinfo="onGotUserInfo"></button>
    </view>
  </scroll-view>
</template>


// customData = {}  // 自定义数据
// customFunction ()　{}  // 自定义方法
// onLoad () {}  // 在Page和Component共用的生命周期函数
// onShow () {}  // 只在Page中存在的页面生命周期函数
// config = {};  // 只在Page实例中存在的配置数据，对应于原生的page.json文件
// data = {};  // 页面所需数据均需在这里声明，可用于模板数据绑定
// components = {};  // 声明页面中所引用的组件，或声明组件中所引用的子组件
// mixins = [];  // 声明页面所引用的Mixin实例
// computed = {};  // 声明计算属性（详见后文介绍）
// watch = {};  // 声明数据watcher（详见后文介绍）
// methods = {};  // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
// 普通自定义方法在methods对象外声明，与methods平级
// events = {};  // 声明组件之间的事件处理函数
//props  {传值}  在WePY中属于  父子组件之间  传值的一种机制

// 页面跳转，传参写法
// this.$redirect('./page2', {a: 1, b: 2})
// this.$redirect({
//   url: './pages?a=1&b=2'
// });
// this.$navigate(url)


// 水平垂直居中
// display: flex;
// align-items: center;
// justify-content: center;

// 居右
// flex-direction:row;
// justify-content:flex-end

// vertical-align:middle;

// overflow:hidden;
// text-overflow:ellipsis;
// white-space:nowrap;

// 自动换行
// word-break:break-all;

// overflow:hidden;
// text-overflow:ellipsis;
// white-space:nowrap;


<script>
import wepy from 'wepy'
export default class index extends wepy.page {
  config = {
    navigationBarTitleText: '香辣虾'
  }
  components = {
  }
  mixins = []
  data = {
    authorizationButton: true, // 控制授权按钮是否显示
    userInfo: null,
    avatarUrl: 'https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLRCZUOeCoWxrjGUrhTVFuvVLKRz08BUM6Y88qy8SxGuBDBKT97rRrYyXyrSNb2Exeuf6YXgVyreQ/132',
    nickName: '',
    code: ''
  }

  methods = {
    handleViewTap() {
      console.log('clicked')
    }
  }

  watch = {

  }

  onLoad(e) {
    // 店铺ID，暂时为定值，后期通过扫描二维码获取(==========记得修改===========)
    this.$parent.globalData.bistro_id = 1
    // 获取用户信息
    this.onGotUserInfo()
  }
  async onGotUserInfo() {
    // 查看是否授权
    wx.getSetting({
      success: res => {
        if (res.authSetting['scope.userInfo']) {
          // 已经授权，可以直接调用 getUserInfo 获取头像昵称
          wx.getUserInfo({
            success: res => {
              this.userInfo = res.userInfo
              if (this.userInfo) {
                this.authorizationButton = false
                this.avatarUrl = this.userInfo.avatarUrl
                this.nickName = this.userInfo.nickName
                // 数据生效
                this.$apply()
                // 提交用户信息
                this.setUserInfo(this.userInfo)
                // 登陆
                // this.userLogin(this.userInfo)
                this.$parent.globalData.userInfo = this.userInfo
                this.$apply()
              }
            }
          })
        }
      }
    })
  }
    // 提交用户信息
  async setUserInfo(userInfo) {
    if (this.$parent.globalData.openId) {
      return
    }
    // 从组件中获取userInfo
    // await wepy.login().then(res => {
    //   this.code = res.code
    // })
    wepy.login({
      success: res => {
        if (res.code) {
          this.code = res.code
          wx.request({
            url: `${this.$parent.globalData.requestUrl}/api/createOrUpdateUser`,
            method: 'POST',
            data: {
              code: res.code,
              nick_name: this.userInfo.nickName,
              profile: this.userInfo.avatarUrl
            },
            success: data => {
              if (data.data.success) {
                // 获取用户信息,及openID  并存入全局
                this.userInfo = data.data.user
                this.openId = this.userInfo.open_id
                this.$parent.globalData.userInfo = this.userInfo
                this.$parent.globalData.openId = this.openId
                this.$apply()
              } else {
                wx.showModal({
                  title: '',
                  content: data.data.errmsg
                })
              }
            }
          })
        } else {
          console.log('登录失败！' + res.errMsg)
        }
      }
    })
  }
  newroom() {
    console.log('创建房间')
    this.$navigate("/pages/cookbook")
  }

  goorder() {
    console.log('进入房间')
  }
}
</script>
